{"ast":null,"code":"// import Axios \nimport Axios from \"axios\"; // import config\n\nimport Config from \"./Config.Controller\";\n\nclass Building {\n  constructor() {\n    this.addBuilding = async data => {\n      console.log(data);\n      var resp = 600;\n      var userData = {};\n      await Axios.post(`${Config.host}${Config.port}${this.api.addBuilding}`, data).then(Response => {\n        console.log(Response);\n        resp = Response.status;\n        userData = Response.data.userData;\n      }).catch(err => {\n        console.log(err);\n\n        try {\n          console.error(err);\n          resp = err.response.status;\n        } catch (error) {\n          console.log(error);\n          resp = 600;\n        }\n      });\n\n      if (resp === 200) {\n        return resp;\n      }\n\n      return resp;\n    };\n\n    this.getAllBuildings = () => {\n      return Axios.get(`${Config.host}${Config.port}${this.api.getAllBuildings}`).then(Response => {\n        console.log(Response);\n        if (Response.status == 200) return Response.data;else return [];\n      }).catch(err => {\n        console.error(err);\n        return [];\n      });\n    };\n\n    this.getOne = async id => {\n      console.log(id);\n      var resp = 600;\n      var userData = {};\n      const data = await Axios.get(`${Config.host}${Config.port}${this.api.getBuilding}/${id}`) // .then(response => {\n      //     console.log(response);\n      // }).catch(err => {\n      //     console.log(err);\n      // })\n      .then(Response => {\n        console.log(Response);\n        resp = Response.status;\n        userData = Response.data;\n      }).catch(err => {\n        console.error(err);\n\n        try {\n          console.error(err);\n          resp = err.response.status;\n        } catch (error) {\n          console.log(error);\n          resp = 600;\n        }\n      });\n\n      if (resp === 200) {\n        return userData;\n      }\n\n      return resp;\n    };\n\n    this.editBuilding = async data => {\n      console.log(data);\n      var resp = 600;\n      var userData = {};\n      await Axios.post(`${Config.host}${Config.port}${this.api.updateBuilding}`, data).then(Response => {\n        console.log(Response);\n        resp = Response.status;\n        userData = Response.data.userData;\n      }).catch(err => {\n        console.error(err);\n\n        try {\n          console.error(err);\n          resp = err.response.status;\n        } catch (error) {\n          console.log(error);\n          resp = 600;\n        }\n      });\n\n      if (resp === 200) {\n        return resp;\n      }\n\n      return resp;\n    };\n\n    this.deleteBuilding = async data => {\n      console.log(data);\n      var resp = 600;\n      var userData = {};\n      await Axios.delete(`${Config.host}${Config.port}${this.api.deleteBuilding}/${data.id}`).then(Response => {\n        console.log(Response);\n        resp = Response.status;\n        userData = Response.data.userData;\n      }).catch(err => {\n        console.error(err);\n\n        try {\n          console.error(err);\n          resp = err.response.status;\n        } catch (error) {\n          console.log(error);\n          resp = 600;\n        }\n      });\n\n      if (resp === 200) {\n        return resp;\n      }\n\n      return resp;\n    };\n\n    // user related apis\n    this.api = {\n      addBuilding: \"/api/buildings/add\",\n      getAllBuildings: \"/api/buildings/get\",\n      updateBuilding: \"/api/buildings/update\",\n      deleteBuilding: \"/api/buildings/delete\",\n      getBuilding: \"/api/buildings/getOne\"\n    };\n  }\n\n}\n\nvar UserObject = new Building();\nexport default UserObject;","map":{"version":3,"sources":["C:/Users/thush/Desktop/pradeepa-distributors/pradeepa-distributors/src/Controllers/Building.Controller.js"],"names":["Axios","Config","Building","constructor","addBuilding","data","console","log","resp","userData","post","host","port","api","then","Response","status","catch","err","error","response","getAllBuildings","get","getOne","id","getBuilding","editBuilding","updateBuilding","deleteBuilding","delete","UserObject"],"mappings":"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","sourcesContent":["\r\n// import Axios \r\nimport Axios from \"axios\";\r\n\r\n// import config\r\nimport Config from \"./Config.Controller\";\r\n\r\nclass Building {\r\n    constructor() {\r\n        // user related apis\r\n        this.api = {\r\n            addBuilding: \"/api/buildings/add\",\r\n            getAllBuildings: \"/api/buildings/get\",\r\n            updateBuilding: \"/api/buildings/update\",\r\n            deleteBuilding: \"/api/buildings/delete\",\r\n            getBuilding: \"/api/buildings/getOne\",\r\n        };\r\n    }\r\n\r\n    addBuilding = async (data) => {\r\n        console.log(data);\r\n\r\n\r\n\r\n        var resp = 600;\r\n        var userData = {}\r\n        await Axios.post(\r\n            `${Config.host}${Config.port}${this.api.addBuilding}`,\r\n            data\r\n        )\r\n            .then(Response => {\r\n                console.log(Response);\r\n\r\n                resp = Response.status;\r\n                userData = Response.data.userData\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                try {\r\n                    console.error(err);\r\n                    resp = err.response.status;\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    resp = 600;\r\n                }\r\n            });\r\n\r\n        if (resp === 200) {\r\n            return resp;\r\n        }\r\n        return resp;\r\n    }\r\n\r\n\r\n\r\n    getAllBuildings = () => {\r\n \r\n        return Axios.get(\r\n            `${Config.host}${Config.port}${this.api.getAllBuildings}`,\r\n        )\r\n        .then(Response => {\r\n            console.log(Response);\r\n            if(Response.status == 200 )\r\n                return Response.data;\r\n            else\r\n                return []\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            return [];    \r\n        });\r\n\r\n    }\r\n\r\n    getOne = async (id) => {\r\n        console.log(id);\r\n        var resp = 600;\r\n        var userData = {}\r\n        const data = await Axios.get(\r\n            `${Config.host}${Config.port}${this.api.getBuilding}/${id}`,)\r\n            // .then(response => {\r\n            //     console.log(response);\r\n            // }).catch(err => {\r\n            //     console.log(err);\r\n            // })\r\n        \r\n            .then(Response => {\r\n                console.log(Response);\r\n\r\n                resp = Response.status;\r\n                userData = Response.data\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                try {\r\n                    console.error(err);\r\n                    resp = err.response.status;\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    resp = 600;\r\n                }\r\n            });\r\n\r\n        if (resp === 200) {\r\n            return userData;\r\n        }\r\n        return resp;\r\n    }\r\n\r\n\r\n    editBuilding = async (data) => {\r\n        console.log(data);\r\n\r\n\r\n\r\n        var resp = 600;\r\n        var userData = {}\r\n        await Axios.post(\r\n            `${Config.host}${Config.port}${this.api.updateBuilding}`,\r\n            data\r\n        )\r\n            .then(Response => {\r\n                console.log(Response);\r\n\r\n                resp = Response.status;\r\n                userData = Response.data.userData\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                try {\r\n                    console.error(err);\r\n                    resp = err.response.status;\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    resp = 600;\r\n                }\r\n            });\r\n\r\n        if (resp === 200) {\r\n            return resp;\r\n        }\r\n        return resp;\r\n    }\r\n\r\n    deleteBuilding = async (data) => {\r\n        console.log(data);\r\n\r\n\r\n\r\n        var resp = 600;\r\n        var userData = {}\r\n        await Axios.delete(\r\n            `${Config.host}${Config.port}${this.api.deleteBuilding}/${data.id}`,\r\n        )\r\n            .then(Response => {\r\n                console.log(Response);\r\n\r\n                resp = Response.status;\r\n                userData = Response.data.userData\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                try {\r\n                    console.error(err);\r\n                    resp = err.response.status;\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    resp = 600;\r\n                }\r\n            });\r\n\r\n        if (resp === 200) {\r\n            return resp;\r\n        }\r\n        return resp;\r\n    }\r\n}\r\nvar UserObject = new Building();\r\nexport default UserObject;"]},"metadata":{},"sourceType":"module"}