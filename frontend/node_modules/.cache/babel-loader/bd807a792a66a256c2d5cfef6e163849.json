{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thush\\\\Desktop\\\\pradeepa-distributors\\\\pradeepa-distributors\\\\src\\\\Buildings\\\\EditBuilding.js\";\nimport React from 'react';\nimport Sidebar from '../Components/Sidebar';\nimport { FormInput, FormSelect, MultiFormSelect } from '../Components/Form';\nimport moment from 'moment';\nimport { omit } from 'lodash';\nimport { Link } from 'react-router-dom';\nimport B_CONTROLLER from '../Controllers/Building.Controller';\nimport CONFIG from '../Controllers/Config.Controller';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditBuilding extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formValueChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onFormSubmit = async e => {\n      e.preventDefault();\n      this.validate();\n      var data = {\n        id: this.state.id,\n        name: this.state.name,\n        noOfFloors: this.state.noOfFloors,\n        accessTime: this.state.accessTime\n      };\n      const result = await B_CONTROLLER.editBuilding(data);\n      console.log(result);\n\n      if (result == 200) {\n        CONFIG.showAlert(\"Successfully Updated\");\n        document.getElementById(\"cancelBtn\").click(); //this.clear();\n      }\n    };\n\n    this.validate = () => {\n      let {\n        name,\n        noOfFloors,\n        accessTime\n      } = this.state;\n      let count = 0;\n      let errors = {};\n\n      if (name == '') {\n        errors.name = true;\n        count++;\n      } else {\n        errors.name = false;\n      }\n\n      if (noOfFloors == '') {\n        errors.noOfFloors = true;\n        count++;\n      } else {\n        errors.noOfFloors = false;\n      }\n\n      if (accessTime == 'NONE') {\n        errors.accessTime = true;\n        count++;\n      } else {\n        errors.accessTime = false;\n      }\n\n      this.setState({\n        errors\n      });\n      return count == 0;\n    };\n\n    this.clear = () => {\n      this.setState({\n        name: '',\n        noOfFloors: '',\n        accessTime: '',\n        id: ''\n      });\n    };\n\n    this.state = {\n      name: '',\n      noOfFloors: '',\n      accessTime: '',\n      id: '',\n      errors: {\n        name: false,\n        noOfFloors: false,\n        accessTime: false\n      }\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"Building ID: \", this.props.match.params.id);\n    const result = await B_CONTROLLER.getOne(this.props.match.params.id);\n    console.log(\"Building results: \", result.data);\n    this.setState({\n      name: result.data.name,\n      noOfFloors: result.data.noOfFloors,\n      accessTime: result.data.accessTime,\n      id: result.data._id\n    });\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        activemenu: 'BUILDINGS',\n        submenu: 'BUILDINGS_LIST'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 shadow-sm rounded bg-white mt-1\",\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"text-header py-3 mb-0 font-weight-bold line-hight-1\",\n                children: [\"Edit Building\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 102\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-muted small\",\n                  children: \"Editing building details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 shadow-sm rounded bg-white mt-3 pb-1\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => this.onFormSubmit(e),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row mt-1 pb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6 mt-1 mb-1\",\n                    children: /*#__PURE__*/_jsxDEV(FormInput, {\n                      label: 'Name',\n                      placeholder: 'Enter building name',\n                      error: errors.name,\n                      name: \"name\",\n                      value: this.state.name,\n                      onChange: this.formValueChange,\n                      error_meesage: '*Name is required'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6 mt-1 mb-1\",\n                    children: /*#__PURE__*/_jsxDEV(FormInput, {\n                      label: '#No Floors',\n                      placeholder: 'Enter number of floors',\n                      error: errors.noOfFloors,\n                      name: \"noOfFloors\",\n                      value: this.state.noOfFloors,\n                      onChange: this.formValueChange,\n                      error_meesage: '*Number of floors is required'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6 mt-1 mb-1\",\n                    children: /*#__PURE__*/_jsxDEV(FormSelect, {\n                      label: 'Access Time',\n                      options: AT_OPTIONS,\n                      error: errors.accessTime,\n                      selected: this.state.accessTime,\n                      onChange: this.formValueChange,\n                      name: \"accessTime\",\n                      error_meesage: '*Access Time is required'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12 mt-1 mb-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn-outline-primary mt-2 btn btn-sm px-2 mr-4\",\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Link, {\n                      to: \"/locations/buildings/list\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        id: \"cancelBtn\",\n                        className: \"btn-outline-secondary mt-2 btn btn-sm px-2 \",\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 66\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst AT_OPTIONS = [{\n  label: 'Select Access Time',\n  value: \"NONE\"\n}, ...['Day & Night Time', 'Day Time'].map(i => {\n  return {\n    label: i,\n    value: i\n  };\n})];\nexport default EditBuilding;","map":{"version":3,"sources":["C:/Users/thush/Desktop/pradeepa-distributors/pradeepa-distributors/src/Buildings/EditBuilding.js"],"names":["React","Sidebar","FormInput","FormSelect","MultiFormSelect","moment","omit","Link","B_CONTROLLER","CONFIG","EditBuilding","Component","constructor","props","formValueChange","e","setState","target","name","value","onFormSubmit","preventDefault","validate","data","id","state","noOfFloors","accessTime","result","editBuilding","console","log","showAlert","document","getElementById","click","count","errors","clear","componentDidMount","match","params","getOne","_id","render","AT_OPTIONS","label","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Sidebar from '../Components/Sidebar'\r\nimport {FormInput , FormSelect , MultiFormSelect} from '../Components/Form'\r\nimport moment from 'moment';\r\nimport { omit } from 'lodash'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport B_CONTROLLER from '../Controllers/Building.Controller';\r\nimport CONFIG from '../Controllers/Config.Controller';\r\n\r\nclass EditBuilding extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            noOfFloors: '',\r\n            accessTime: '',\r\n            id: '',\r\n            errors : { \r\n                name : false , \r\n                noOfFloors : false ,\r\n                accessTime : false ,\r\n            }\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log(\"Building ID: \", this.props.match.params.id);\r\n        \r\n        const result = await B_CONTROLLER.getOne(this.props.match.params.id);\r\n\r\n        console.log(\"Building results: \", result.data);\r\n\r\n        this.setState({\r\n            name: result.data.name,\r\n            noOfFloors: result.data.noOfFloors,\r\n            accessTime: result.data.accessTime,\r\n            id: result.data._id\r\n        })\r\n    }\r\n\r\n    formValueChange = (e) => {\r\n        this.setState({[e.target.name] : e.target.value  });\r\n    }\r\n\r\n    onFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        this.validate();\r\n\r\n        var data = {\r\n            id: this.state.id,\r\n            name: this.state.name,\r\n            noOfFloors: this.state.noOfFloors,\r\n            accessTime: this.state.accessTime,\r\n        }\r\n\r\n        const result = await B_CONTROLLER.editBuilding(data)\r\n\r\n        console.log(result);\r\n\r\n        if(result == 200){\r\n            CONFIG.showAlert(\"Successfully Updated\");\r\n            document.getElementById(\"cancelBtn\").click();\r\n            //this.clear();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {errors} = this.state;\r\n    return (\r\n        <div className=\"app\" >\r\n        <Sidebar activemenu={'BUILDINGS'} submenu={'BUILDINGS_LIST'} />\r\n        <main>\r\n            <div className=\"container-fluid\" >\r\n            <div className=\"row\" >\r\n                <div className=\"col-12 shadow-sm rounded bg-white mt-1\" >\r\n                    <h6 className=\"text-header py-3 mb-0 font-weight-bold line-hight-1\">Edit Building<br></br>\r\n                    <span className=\"text-muted small\">Editing building details</span></h6>\r\n                </div>\r\n                <div className=\"col-12 shadow-sm rounded bg-white mt-3 pb-1\" >\r\n                <form onSubmit={(e) => this.onFormSubmit(e)}>\r\n                <div className=\"row mt-1 pb-3\" >\r\n                    <div className=\"col-md-6 mt-1 mb-1\" >\r\n                            <FormInput \r\n                                label={'Name'}\r\n                                placeholder={'Enter building name'}\r\n                                error={ errors.name}\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                onChange={this.formValueChange}\r\n                                error_meesage={'*Name is required'}\r\n                            />\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-1 mb-1\" >\r\n                            <FormInput \r\n                                label={'#No Floors'}\r\n                                placeholder={'Enter number of floors'}\r\n                                error={ errors.noOfFloors}\r\n                                name=\"noOfFloors\"\r\n                                value={this.state.noOfFloors}\r\n                                onChange={this.formValueChange}\r\n                                error_meesage={'*Number of floors is required'}\r\n                            />\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-1 mb-1\" >\r\n                        <FormSelect \r\n                                label={'Access Time'}\r\n                                options={AT_OPTIONS}\r\n                                error={ errors.accessTime}\r\n                                selected={this.state.accessTime}\r\n                                onChange={this.formValueChange}\r\n                                name=\"accessTime\"\r\n                                error_meesage={'*Access Time is required'}\r\n                            />\r\n                    </div>\r\n                    <div className=\"col-md-12 mt-1 mb-1\" >\r\n                            <button type=\"submit\" className=\"btn-outline-primary mt-2 btn btn-sm px-2 mr-4\">Update</button>\r\n                            <Link to=\"/locations/buildings/list\"><button id=\"cancelBtn\" className=\"btn-outline-secondary mt-2 btn btn-sm px-2 \">Cancel</button></Link>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </main>\r\n    </div>\r\n    );}\r\n\r\n    validate = () => {\r\n        let { name, noOfFloors, accessTime} = this.state;\r\n        let count = 0;\r\n        let errors = {}\r\n\r\n        if( name == ''){\r\n            errors.name = true\r\n            count++\r\n        }else{\r\n            errors.name = false \r\n        }\r\n\r\n        if( noOfFloors == ''){\r\n            errors.noOfFloors = true\r\n            count++\r\n        }else{\r\n            errors.noOfFloors = false \r\n        }\r\n\r\n        if( accessTime == 'NONE'){\r\n            errors.accessTime = true\r\n            count++\r\n        }else{\r\n            errors.accessTime = false \r\n        }\r\n       \r\n        this.setState({errors})\r\n        return count == 0;\r\n    }\r\n\r\n    clear = ()=>{\r\n        this.setState({\r\n            name: '',\r\n            noOfFloors: '',\r\n            accessTime: '',\r\n            id: '',\r\n        })\r\n    }\r\n}\r\n\r\nconst AT_OPTIONS = [{ label : 'Select Access Time' ,value : \"NONE\" } , \r\n...['Day & Night Time', 'Day Time'].map( i => {\r\n    return{\r\n        label :  i  ,\r\n         value : i \r\n    }\r\n})];\r\n\r\nexport default EditBuilding;\r\n"]},"metadata":{},"sourceType":"module"}