{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thush\\\\Desktop\\\\pradeepa-distributors\\\\pradeepa-distributors\\\\src\\\\Buildings\\\\AddBuilding.js\";\nimport React from 'react';\nimport Sidebar from '../Components/Sidebar';\nimport { FormInput, FormSelect, MultiFormSelect } from '../Components/Form';\nimport moment from 'moment';\nimport { omit } from 'lodash';\nimport BUL_CONTROLLER from '../Controllers/Building.Controller';\nimport CONFIG from '../Controllers/Config.Controller'; // import { ThemeProvider, createGlobalStyle } from 'styled-components';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddBuilding extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formValueChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.clear = () => {\n      this.setState({\n        name: '',\n        noOfFloors: '',\n        accessTime: ''\n      });\n    };\n\n    this.onFormSubmit = async e => {\n      e.preventDefault();\n      var ret = this.validate();\n      console.log(ret);\n\n      if (ret == false) {\n        console.log(\"Before\");\n        return \"\";\n      }\n\n      console.log(\"After\");\n      var data = {\n        name: this.state.name,\n        noOfFloors: this.state.noOfFloors,\n        accessTime: this.state.accessTime\n      };\n      const result = await BUL_CONTROLLER.addBuilding(data);\n      console.log(result);\n\n      if (result == 200) {\n        CONFIG.showAlert(\"Successfully Added\");\n        this.clear();\n      }\n    };\n\n    this.validate = () => {\n      let {\n        name,\n        noOfFloors,\n        accessTime\n      } = this.state;\n      let count = 0;\n      let errors = {};\n\n      if (name == '') {\n        errors.name = true;\n        count++;\n      } else {\n        errors.name = false;\n      }\n\n      if (noOfFloors == '') {\n        errors.noOfFloors = true;\n        count++;\n      } else {\n        errors.noOfFloors = false;\n      }\n\n      if (accessTime == '') {\n        errors.accessTime = true;\n        count++;\n      } else {\n        errors.accessTime = false;\n      }\n\n      this.setState({\n        errors\n      });\n      return count == 0;\n    };\n\n    this.ResetForm = () => {\n      this.setState({\n        name: '',\n        noOfFloors: '',\n        accessTime: ''\n      });\n    };\n\n    this.state = {\n      name: '',\n      noOfFloors: '',\n      accessTime: '',\n      errors: {\n        name: false,\n        noOfFloors: false,\n        accessTime: false\n      }\n    };\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        activemenu: 'BUILDINGS',\n        submenu: 'ADD_BUILDING'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 shadow-sm rounded bg-white mt-1\",\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"text-header py-3 mb-0 font-weight-bold line-hight-1\",\n                children: [\"Add Building\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 101\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-muted small\",\n                  children: \"Add a new building to the system\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 shadow-sm rounded bg-white mt-3 pb-1\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => this.onFormSubmit(e),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row mt-1 pb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6 mt-1 mb-1\",\n                    children: /*#__PURE__*/_jsxDEV(FormInput, {\n                      label: 'Name',\n                      placeholder: 'Enter building name',\n                      error: errors.name,\n                      name: \"name\",\n                      value: this.state.name,\n                      onChange: this.formValueChange,\n                      error_meesage: '*Name is required'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6 mt-1 mb-1\",\n                    children: /*#__PURE__*/_jsxDEV(FormInput, {\n                      label: 'No Floors',\n                      placeholder: 'Enter number of floors',\n                      error: errors.noOfFloors,\n                      name: \"noOfFloors\",\n                      value: this.state.noOfFloors,\n                      onChange: this.formValueChange,\n                      error_meesage: '*Number of floors is required'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6 mt-1 mb-1\",\n                    children: /*#__PURE__*/_jsxDEV(FormSelect, {\n                      label: 'Access Time',\n                      options: AT_OPTIONS,\n                      error: errors.accessTime,\n                      selected: this.state.accessTime,\n                      onChange: this.formValueChange,\n                      name: \"accessTime\",\n                      error_meesage: '*Access Time is required'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12 mt-1 mb-1\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-primary\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst AT_OPTIONS = [{\n  label: 'Select Access Time',\n  value: \"\"\n}, ...['Day & Night Time', 'Day Time'].map(i => {\n  return {\n    label: i,\n    value: i\n  };\n})];\nexport default AddBuilding;","map":{"version":3,"sources":["C:/Users/thush/Desktop/pradeepa-distributors/pradeepa-distributors/src/Buildings/AddBuilding.js"],"names":["React","Sidebar","FormInput","FormSelect","MultiFormSelect","moment","omit","BUL_CONTROLLER","CONFIG","AddBuilding","Component","constructor","props","formValueChange","e","setState","target","name","value","clear","noOfFloors","accessTime","onFormSubmit","preventDefault","ret","validate","console","log","data","state","result","addBuilding","showAlert","count","errors","ResetForm","render","AT_OPTIONS","label","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Sidebar from '../Components/Sidebar'\r\nimport {FormInput , FormSelect , MultiFormSelect} from '../Components/Form'\r\nimport moment from 'moment';\r\nimport { omit } from 'lodash'\r\n\r\nimport BUL_CONTROLLER from '../Controllers/Building.Controller';\r\nimport CONFIG from '../Controllers/Config.Controller';\r\n\r\n// import { ThemeProvider, createGlobalStyle } from 'styled-components';\r\n\r\n\r\n\r\n\r\nclass AddBuilding extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            noOfFloors: '',\r\n            accessTime: '',\r\n            errors : { \r\n                name : false , \r\n                noOfFloors : false ,\r\n                accessTime : false ,\r\n            }\r\n        };\r\n    }\r\n\r\n    formValueChange = (e) => {\r\n        this.setState({[e.target.name] : e.target.value  });\r\n    }\r\n\r\n    clear = ()=>{\r\n        this.setState({\r\n            name: '',\r\n            noOfFloors: '',\r\n            accessTime: '',\r\n        })\r\n    }\r\n\r\n    onFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        var ret = this.validate();\r\n        console.log(ret);\r\n        if (ret == false){\r\n            console.log(\"Before\");\r\n            return \"\";\r\n        }\r\n\r\n        console.log(\"After\");\r\n        var data = {\r\n            name: this.state.name,\r\n            noOfFloors: this.state.noOfFloors,\r\n            accessTime: this.state.accessTime,\r\n        }\r\n\r\n        const result = await BUL_CONTROLLER.addBuilding(data)\r\n\r\n        console.log(result);\r\n\r\n        if(result == 200){\r\n            CONFIG.showAlert(\"Successfully Added\")\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {errors} = this.state;\r\n    return (\r\n\r\n        <div className=\"app\" >\r\n        <Sidebar activemenu={'BUILDINGS'} submenu={'ADD_BUILDING'} />\r\n        <main>\r\n            <div className=\"container-fluid\" >\r\n            <div className=\"row\" >\r\n                <div className=\"col-12 shadow-sm rounded bg-white mt-1\" >\r\n                    <h6 className=\"text-header py-3 mb-0 font-weight-bold line-hight-1\">Add Building<br></br>\r\n                    <span className=\"text-muted small\">Add a new building to the system</span></h6>\r\n                </div>\r\n                <div className=\"col-12 shadow-sm rounded bg-white mt-3 pb-1\" >\r\n                <form onSubmit={(e) => this.onFormSubmit(e)}>\r\n                <div className=\"row mt-1 pb-3\" >\r\n                    <div className=\"col-md-6 mt-1 mb-1\" >\r\n                            <FormInput \r\n                                label={'Name'}\r\n                                placeholder={'Enter building name'}\r\n                                error={ errors.name}\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                onChange={this.formValueChange}\r\n                                error_meesage={'*Name is required'}\r\n                            />\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-1 mb-1\" >\r\n                            <FormInput \r\n                                label={'No Floors'}\r\n                                placeholder={'Enter number of floors'}\r\n                                error={ errors.noOfFloors}\r\n                                name=\"noOfFloors\"\r\n                                value={this.state.noOfFloors}\r\n                                onChange={this.formValueChange}\r\n                                error_meesage={'*Number of floors is required'}\r\n                            />\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-1 mb-1\" >\r\n                        <FormSelect \r\n                                label={'Access Time'}\r\n                                options={AT_OPTIONS}\r\n                                error={ errors.accessTime}\r\n                                selected={this.state.accessTime}\r\n                                onChange={this.formValueChange}\r\n                                name=\"accessTime\"\r\n                                error_meesage={'*Access Time is required'}\r\n                            />\r\n                    </div>\r\n                    <div className=\"col-md-12 mt-1 mb-1\" >\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            {/* <button type=\"reset\" className=\"btn-outline-secondary mt-2 btn btn-sm px-2 \" onClick={this.clear}>Reset</button> */}\r\n                    </div>\r\n                </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </main>\r\n        \r\n    </div>\r\n\r\n    );}\r\n\r\n    validate = () => {\r\n        let { name, noOfFloors, accessTime} = this.state;\r\n        let count = 0;\r\n        let errors = {}\r\n\r\n        if( name == ''){\r\n            errors.name = true\r\n            count++\r\n        }else{\r\n            errors.name = false \r\n        }\r\n\r\n        if( noOfFloors == ''){\r\n            errors.noOfFloors = true\r\n            count++\r\n        }else{\r\n            errors.noOfFloors = false \r\n        }\r\n\r\n        if( accessTime == ''){\r\n            errors.accessTime = true\r\n            count++\r\n        }else{\r\n            errors.accessTime = false \r\n        }\r\n       \r\n        this.setState({errors})\r\n        return count == 0;\r\n    }\r\n\r\n    ResetForm = () => {\r\n        this.setState(\r\n            {\r\n                name: '',\r\n                noOfFloors: '',\r\n                accessTime: ''\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nconst AT_OPTIONS = [{ label : 'Select Access Time' ,value : \"\" } , \r\n...['Day & Night Time', 'Day Time'].map( i => {\r\n    return{\r\n        label :  i  ,\r\n         value : i \r\n    }\r\n})];\r\n\r\nexport default AddBuilding;\r\n"]},"metadata":{},"sourceType":"module"}